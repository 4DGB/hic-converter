#!/bin/bash
## 
## ------------------------------------------------------------------------------------------------------------- ##
## 
## Example usage:
## 
## Change directory
## cd ~/hic-converter/scripts/
## 
## Activate conda env
## conda activate hicexplorerenv
##
## Call the conversion script
## ./h5.to.hic.sh -m ../data/h5/ENCLB571GEP.chr22.200kb.h5 -g ../sizes/chr22.size.bed -o ../data/hic -V true -R false
##	
## ------------------------------------------------------------------------------------------------------------- ##
##
## NOTE: The conda environment (as shown above) with HicExplorer will be unique to the user
## 
## For help or to report any issues email 
##  Cullen Roth 
##      at 
## croth@lanl.gov
## 
## ------------------------------------------------------------------------------------------------------------- ##
## 
## Set default variables and help message
## 
binsize=200000                                   ## Set the default binsize for contact map to 200 kb
norm=KR                                          ## The matrix balancing used in hic generation
verbose=false                                    ## tells the script not to print to screen
remove=true                                      ## A flag to Remove temporary output files made in script
current=`pwd`                                    ## Cather the current working directory
outdir=${current}/                               ## Set the output directory
jarpath='../jar/juicer_tools_1.22.01.jar'        ## Set the path to the juicer jar file within the repo
helpmessage="\nh5.to.hic.sh [options] -m [h5 matrix] -b [binsize] -g [genome size file]

Inputs (required):
-m The HiC matrix in h5 format to be converted. 
-g A chromosome (or genome) size file. This is a tsv file with two columns:
    1) the chromosome(s) or contig(s) name(s)
    2) the length of the chromosome(s) or contig(s)

Options:
-b The binsize (default: $binsize) or a comma seperated list (with no spaces) of binsizes (e.g. 100000,200000,500000) for final hic file. 
-o Output directory to place new Hi-C contact matrix in hic format (default: $outdir).
-N The matrix balancing method to use in juicer pre command for hic generation (default: $norm).
-V Bollean flag to run script in verbose mode, good for debugging (default: $verbose). 
-R Boolean flag to remove tempory files (.toremove.) generated by this script (default: $remove). 
-J Path to juicer tools jar file (default: $jarpath).

Dependencies include: juicer tools, python3, and HiCExplorer.\n
Example usage:\nconda activate hicexplorer\n\nh5.to.hic.sh -m in.h5 -g chr.size.bed\n\n"
## 
## ------------------------------------------------------------------------------------------------------------- ##
## Gather Variables
## 
while getopts "m:g:b:o:N:V:R:J:h" opt; do
    case $opt in
        m) h5=$OPTARG;;
        g) genomesizes=$OPTARG;;
        b) binsize=$OPTARG;;
        o) outdir=$OPTARG;;
        N) norm=$OPTARG;;
        V) verbose=$OPTARG;;
        R) remove=$OPTARG;;
        J) jarpath=$OPTARG;;
        h) printf "$helpmessage"
            exit;;
        ?) printf "$helpmessage"
            exit;;
    esac
done

## Check if any arguments are unknown or missing and print help
if [ $OPTIND -eq 1 ]; then
    printf "$helpmessage"
    exit
fi

## ------------------------------------------------------------------------------------------------------------- ##
## 
## Convert to a hic matrix
## 
## Gather basename
math5=`basename $h5`

## Make alias' callable 
shopt -s expand_aliases

## Add juicer path
alias juicer='java -Xms512m -Xmx2048m -jar $jarpath'

## Print juicer path if verbose
if $verbose ; then
    echo 
    echo "WARNING: Printing juicer pre help message."
	echo `juicer pre --help`
    echo 
fi

## ------------------------------------------------------------------------------------------------------------- ##
## 
## Convert to gene interactions file from h5
## 
echo "    h5 --> tsv  "
echo "Converting h5 matrix to ginteractions (tsv) file via hicConvertFormat."

hicConvertFormat -m $h5 -o ${outdir}${math5}.toremove.ginteractions --inputFormat h5 --outputFormat ginteractions

## Convert tsv to shorted short file
echo " "
echo "   tsv --> short"
echo "Converting ginteractions file to sorted, short file."
h5.to.short.py ${outdir}${math5}.toremove.ginteractions.tsv $genomesizes ${outdir}${math5}.toremove.short $verbose

## Call juicer
echo " "
echo " short --> hic  "
echo "Activating juicer pre and converting short file to hic."

## Call juicer for the chromosome for all the binsizes in binsize
juicer pre -k $norm -r $binsize ${outdir}${math5}.toremove.short ${outdir}${math5}.hic $genomesizes

## ------------------------------------------------------------------------------------------------------------- ##
## 
## Remove the temporary files
## 
if $remove ; then

## If true print to screen that we are removing these files
    if $verbose ; then
        echo " "
        echo "Removing temporary files ..."
    fi 

    ## remove files
    rm ${outdir}${math5}.toremove*
fi 

## Fin
echo
echo "Done :-)"